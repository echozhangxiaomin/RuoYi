package ${packageName}.${moduleName}.service.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import java.util.concurrent.atomic.AtomicInteger;
import ${packageName}.${moduleName}.mapper.${ClassName}Mapper;
import ${packageName}.${moduleName}.model.${ClassName};
import ${packageName}.${moduleName}.service.${ClassName}Service;

/**
 * ${functionName}Service业务层处理
 * 
 * @author ${author}
 * @date ${datetime}
 */
@Service
public class ${ClassName}ServiceImpl implements ${ClassName}Service {
 
    @Autowired
    private ${ClassName}Mapper ${className}Mapper;


    /**
     * 查询${functionName}列表
     * @param ${className} ${functionName}
     * @return ${functionName}
     */
    @Override
    public List<${ClassName}> list(${ClassName} ${className}){
        return ${className}Mapper.select${ClassName}List(${className});
    }

    /**
     * 新增${functionName}
     * 
     * @param ${className} ${functionName}
     * @return 结果
     */
    @Transactional
    @Override
    public Integer add(List<${ClassName}> ${className}s){
        AtomicInteger result = new AtomicInteger();
        ${className}s.forEach(a->{
            if(a.getId() == null){
                result.addAndGet(${className}Mapper.insert${ClassName}(${className}));
            }else{
                result.addAndGet(${className}Mapper.update${ClassName}(${className}));
            }
        });
        return result.intValue();
    }

     /**
     * 批量删除${functionName}
     * 
     * @param ${pkColumn.javaField}s 需要删除的${functionName}主键
     * @return 结果
     */
    @Transactional
    @Override
    public Integer delete(${pkColumn.javaType}... ${pkColumn.javaField}s){
        return ${className}Mapper.delete${ClassName}By${pkColumn.capJavaField}s(${pkColumn.javaField}s);
    }

}
